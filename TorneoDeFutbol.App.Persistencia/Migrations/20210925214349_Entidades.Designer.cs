// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TorneoDeFutbol.App.Persistencia;

namespace TorneoDeFutbol.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20210925214349_Entidades")]
    partial class Entidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Colegio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Colegios");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.DatosPartido", b =>
                {
                    b.Property<int>("Id_DatosPartido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Goles_L")
                        .HasColumnType("int");

                    b.Property<int>("Goles_V")
                        .HasColumnType("int");

                    b.Property<int>("Marcador")
                        .HasColumnType("int");

                    b.Property<int>("Tarjetas_Amarillas")
                        .HasColumnType("int");

                    b.Property<int>("Tarjetas_Rojas")
                        .HasColumnType("int");

                    b.Property<int>("Tiempo")
                        .HasColumnType("int");

                    b.Property<int?>("equipoId")
                        .HasColumnType("int");

                    b.HasKey("Id_DatosPartido");

                    b.HasIndex("equipoId");

                    b.ToTable("DatosPartidos");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("directorTecnicoId")
                        .HasColumnType("int");

                    b.Property<int?>("jugadorId")
                        .HasColumnType("int");

                    b.Property<int?>("municipioId")
                        .HasColumnType("int");

                    b.Property<int?>("registroPartidos_Jugados")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("directorTecnicoId");

                    b.HasIndex("jugadorId");

                    b.HasIndex("municipioId");

                    b.HasIndex("registroPartidos_Jugados");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Estadio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("municipioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("municipioId");

                    b.ToTable("Estadios");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Municipios");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Participantes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Participante");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Partido", b =>
                {
                    b.Property<int>("Id_Partido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("EquipoLocal")
                        .HasColumnType("bit");

                    b.Property<bool>("EquipoVisitante")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("GolesLocal")
                        .HasColumnType("int");

                    b.Property<int>("GolesVisitante")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int>("Marcador")
                        .HasColumnType("int");

                    b.Property<int?>("arbitroId")
                        .HasColumnType("int");

                    b.Property<int?>("datospartidoId_DatosPartido")
                        .HasColumnType("int");

                    b.Property<int?>("equipoId")
                        .HasColumnType("int");

                    b.Property<int?>("estadioId")
                        .HasColumnType("int");

                    b.HasKey("Id_Partido");

                    b.HasIndex("arbitroId");

                    b.HasIndex("datospartidoId_DatosPartido");

                    b.HasIndex("equipoId");

                    b.HasIndex("estadioId");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Registro", b =>
                {
                    b.Property<int>("Partidos_Jugados")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Goles_Contra")
                        .HasColumnType("int");

                    b.Property<int>("Goles_Favor")
                        .HasColumnType("int");

                    b.Property<int>("Partidos_Empatados")
                        .HasColumnType("int");

                    b.Property<int>("Partidos_Ganados")
                        .HasColumnType("int");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.HasKey("Partidos_Jugados");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Arbitro", b =>
                {
                    b.HasBaseType("TorneoDeFutbol.App.Dominio.Participante");

                    b.Property<int?>("colegioId")
                        .HasColumnType("int");

                    b.Property<int?>("participanteId")
                        .HasColumnType("int")
                        .HasColumnName("Arbitro_participanteId");

                    b.HasIndex("colegioId");

                    b.HasIndex("participanteId");

                    b.HasDiscriminator().HasValue("Arbitro");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Director_Tecnico", b =>
                {
                    b.HasBaseType("TorneoDeFutbol.App.Dominio.Participante");

                    b.Property<int?>("participanteId")
                        .HasColumnType("int")
                        .HasColumnName("Director_Tecnico_participanteId");

                    b.HasIndex("participanteId");

                    b.HasDiscriminator().HasValue("Director_Tecnico");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Jugador", b =>
                {
                    b.HasBaseType("TorneoDeFutbol.App.Dominio.Participante");

                    b.Property<int>("NumCamiseta")
                        .HasColumnType("int");

                    b.Property<string>("Posicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("participanteId")
                        .HasColumnType("int");

                    b.HasIndex("participanteId");

                    b.HasDiscriminator().HasValue("Jugador");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.DatosPartido", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Equipo", "equipo")
                        .WithMany()
                        .HasForeignKey("equipoId");

                    b.Navigation("equipo");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Equipo", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Director_Tecnico", "directorTecnico")
                        .WithMany()
                        .HasForeignKey("directorTecnicoId");

                    b.HasOne("TorneoDeFutbol.App.Dominio.Jugador", "jugador")
                        .WithMany()
                        .HasForeignKey("jugadorId");

                    b.HasOne("TorneoDeFutbol.App.Dominio.Municipio", "municipio")
                        .WithMany()
                        .HasForeignKey("municipioId");

                    b.HasOne("TorneoDeFutbol.App.Dominio.Registro", "registro")
                        .WithMany()
                        .HasForeignKey("registroPartidos_Jugados");

                    b.Navigation("directorTecnico");

                    b.Navigation("jugador");

                    b.Navigation("municipio");

                    b.Navigation("registro");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Estadio", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Municipio", "municipio")
                        .WithMany()
                        .HasForeignKey("municipioId");

                    b.Navigation("municipio");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Partido", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Arbitro", "arbitro")
                        .WithMany()
                        .HasForeignKey("arbitroId");

                    b.HasOne("TorneoDeFutbol.App.Dominio.DatosPartido", "datospartido")
                        .WithMany()
                        .HasForeignKey("datospartidoId_DatosPartido");

                    b.HasOne("TorneoDeFutbol.App.Dominio.Equipo", "equipo")
                        .WithMany()
                        .HasForeignKey("equipoId");

                    b.HasOne("TorneoDeFutbol.App.Dominio.Estadio", "estadio")
                        .WithMany()
                        .HasForeignKey("estadioId");

                    b.Navigation("arbitro");

                    b.Navigation("datospartido");

                    b.Navigation("equipo");

                    b.Navigation("estadio");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Arbitro", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Colegio", "colegio")
                        .WithMany()
                        .HasForeignKey("colegioId");

                    b.HasOne("TorneoDeFutbol.App.Dominio.Participante", "participante")
                        .WithMany()
                        .HasForeignKey("participanteId");

                    b.Navigation("colegio");

                    b.Navigation("participante");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Director_Tecnico", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Participante", "participante")
                        .WithMany()
                        .HasForeignKey("participanteId");

                    b.Navigation("participante");
                });

            modelBuilder.Entity("TorneoDeFutbol.App.Dominio.Jugador", b =>
                {
                    b.HasOne("TorneoDeFutbol.App.Dominio.Participante", "participante")
                        .WithMany()
                        .HasForeignKey("participanteId");

                    b.Navigation("participante");
                });
#pragma warning restore 612, 618
        }
    }
}
